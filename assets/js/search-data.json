{
  
    
        "post0": {
            "title": "Team Baddies Project Approval Presentation",
            "content": ". Home Page (Nikhil) . . workout log page (Sri) | This is a workout log where you can record your workouts and keep track of your fitness. This way, you can stay organized and maintain motivation to work towards a healthy lifestyle. | Has an input | Has a table at the bottom | Once you click submit button, it should add onto the table at the bottom (connection between frontend and backend) | . Workouts Plan (Lydia) . add image . ISPE page (Alexa) . . What is ISPE? . Independent Sport Physical Education . ISPE is a program for kids who are in individual sports and practice for 15+ hours a week and want middle/highschool credit for the PE (without taking the actual class) | This page allows students to keep track of the workouts they do for school and the grades they recieve. | It keeps students organized, motivated, and on track to get credit for the class. | . Inspiration Page (Ava) . This page serves as a source of motivation for our users. Users can click on the Inspiration tab in our navigation bar and it will bring them to this page: . . At the bottom of the page, users will see a button for motivation and a place to submit their own quotes: . When clicked, the inspiration button will pop up with an inspirational quote: . Users will be able to submit their own inspirational quotes that will appear in a table for all users to see. Users will be able to edit or delete their responses. . Our Challenges (Ava) . Past challenges: . Frontend: Our team had little knowledge of CSS and styling, so we tried new things and went through trial and error until we ended up with our current website design. | . | Backend: Last week’s hacks were definitely a struggle when learning how to create a database for our user data and using an API to call that data from a browser. | . | Future Challenges: . Figuring out how to connect our frontend to our backend (with correct HTML5 tables) | preventing garbage data for all of our tables | figuring out how to successfully edit/delete responses from frontend | testing our data: making sure no garbage data, correct errors returned for garbage, not all users get the same data (unless specified otherwise like for quotes) | Admin vs User Access (Alexa) . Anyone who is an Admin (Ava, Alexa, Lydia, Sri, Nikhil) can acess all users and their inputs | Any user with a normal account will only be able to see/add/edit their own inputs on their pages | . Scrum Board (Lydia) . ## Our Agile Manifesto (sri) . Goal/Timeline . weekly progress goals | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/projectproposal/TeamBaddies",
            "relUrl": "/projectproposal/TeamBaddies",
            "date": " • Jan 25, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Notes on Rebecca (APCSA) Presentation",
            "content": "Project= a Tool to help ASB Clubs Executive: . asb doesn’t have to type everthing out/easier to check | club leaders to update info (not ust asb changing it) | doesn’t have to go into ASB room to drop off meeting minutes (tedious/unorganized/TERRIBLE COME ON CLUBS ;) ) | . Admin pages: . ASB can change everything | only clubs with accounts can change their row | . Club Review Database: . allows members of clubs to add reviews | security feture: admin can delete reviews | each club can have many reviews | . Their Presentation: . this group did a great job with their presentation | google slides? | included wireframes/UMLs (submit button = frontend -&gt; backend) | listed challenges | showed a chart that showed level of acess (admin vs user) | made a specific plan/goal of everything they wil be completing in the next 6 weeks (assigned work) | issues/scrum board/manifesto | . Taking into Account for our Group: . details = everything! | include lots of visuals | make a specific plan of how we are going to accomplish our project on time | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/projectproposal/APCSA",
            "relUrl": "/projectproposal/APCSA",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Week 18 Backend to Frontend",
            "content": "Our View and Model . Home Page . ^ This image above is a view for how we would like our login button to eventually look like. Right now, the button is at teh bottom of the index page, but we would like to figure out how to add it the default html. . Workout Log Page . . Workout Log Input and Table . . This is a visual map of how out frontend and backend will be conneted and get/post data frontend is represented by the pink boxes | backend is represented by the yellow boxes | the purple ovals describe what location/file the code is in | . | 1st: User inputs data into our frontend (on workoutlog.md) | 2nd: the input gets posted to the backend | 3rd: the backend converts the data into JSON format (in login-workout-backend.py) | 4th: the JASON data is autogenerated in javascript (in gendata.js) and then imported to the frontend (Workoutlog.md) | 5th: the input is now in the table displayed in the frontend | . Frontend Code . . This is the code that is the beginning step for C.R.U.D. This uses html 5 input in the table, allowing people to input their workouts. Then, the input will go through our UML process (shown in the ss above). | . Backend Code . The image above is the Object Oriented Backend Code that will be used to process the data sent from the frontend forms. We are trying to have personalized data and tables for each user. I think that adding setter and getter functions for each table will allow users to have an individual experience. We would have one class called users, and their data would be extracted and added to dictionaries for each of the individual tables. I am not sure if this is exactly how this works, but it was worth a shot. . CRUD . C - In our website, we are creating a login system where the user can input their information and workouts on individual tables. | R - The information inputted will go through our UML process. | U - The information, once processed, will be added to the table (such as the workout logs) | D - The user could have the option to delete on command, not when the page refreshes. | . The image above is a view of how we would like our workout table to look, with data imputed from the user that can be edited and/or deleted. . CSS on our Home Page . . This is the code that uses CSS to create the boxes on our project home page. By using CSS, we are able to format aspects of the boxes like the width, height, position, etc. | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/lesson/week18",
            "relUrl": "/lesson/week18",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Simulation Quiz Rough Draft",
            "content": "questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: B You are incorrect Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: A You are incorrect Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 4 /6 . Old Quiz Format: . questions = { &quot;1. Simulations will always have the same result&quot;: { &quot;A&quot;: &quot;True&quot;, &quot;B&quot;: &quot;False&quot; }, &quot;2. A simulation has results that are more accurate than an experiment&quot;: { &quot;A&quot;: &quot;True&quot;, &quot;B&quot;: &quot;False&quot; }, &quot;3. A simulation can model real world events that are not practical for experiments&quot;: { &quot;A&quot;: &quot;True&quot;, &quot;B&quot;: &quot;False&quot; }, &quot;4. Which one of these is FALSE regarding simulations&quot;: { &quot;A&quot;: &quot;Reduces Costs&quot;, &quot;B&quot;: &quot;Is safer than real life experiments&quot;, &quot;C&quot;: &quot;More Efficient&quot;, &quot;D&quot;: &quot;More accurate than real life experiments&quot; }, &quot;5. Which of the following scenarios would be the LEAST beneficial to have as a simulation&quot;: { &quot;A&quot;: &quot;A retail company wants to identify the item which sold the most on their website&quot;, &quot;B&quot;: &quot;A restaurant wants to determine if the use of robots will increase efficiency&quot;, &quot;C&quot;: &quot;An insurance company wants to study the impact of rain on car accidents&quot;, &quot;D&quot;: &quot;A sports car company wants to study design changes to their new bike design &quot; }, &quot;6. Which of the following is better to do as a simulation than as a calculation&quot;: { &quot;A&quot;: &quot;Keeping score at a basketball game&quot;, &quot;B&quot;: &quot;Keeping track of how many games a person has won&quot;, &quot;C&quot;: &quot;Determining the average grade for a group of tests&quot;, &quot;D&quot;: &quot;Studying the impact of carbon emissions on the environment&quot; } } print(&quot; nSimulations Quiz&quot;) prompt = &quot;&gt;&gt;&gt; &quot; correct_options = [&#39;D&#39;, &#39;C&#39;, &#39;D&#39;, &#39;B&#39;, &#39;A&#39;] score_count = 0 for correct_option, (question, options) in zip(correct_options, questions.items()): print(&quot; n&quot;, question, &quot; n&quot;) for option, answer in options.items(): print(option, &quot;:&quot;, answer) choice = str(input(prompt)) if choice.upper() == correct_option: score_count = score_count + 1 print(&quot;Your score is:&quot;) print(score_count) .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/quiz/planning",
            "relUrl": "/quiz/planning",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 3 Section 16 Grades- Simulations",
            "content": "Find your name below to see your grade! . Name Score Grader Comments . Ex. Ava Carlson | 0.9/1 | Ava Carlson | Great work! All hacks complete. | . Jeongwoo Lee | 1/1 | Alexa Carlson | All hacks complete with very detailed explanations of simulations. 6/6 on quiz and 5 extra simulations coded | . Aron Rub | 0.96/1 | Sri Kotturi | All the Hacks were complete and done very nicely and explained well. Extra credit completed and explained. I didn&#39;t see much of the guided questions being answered for the dice hack though, but overall it is good. Good Job!! | . Alex Kumar | 0.96/1 | Lydia Cho | All hacks complete with very detailed descriptions of each code. Basic extra simulation completed, but could have added more factors (or explained how) to make it more accurate. | . Safin Singh | 1/1 | Alexa Carlson | All hacks complete with very unique and detailed discriptions of the simulations. 6/6 on quiz. Coded a complex physics simulation that actually runs. | . Ethan Tran | 0.94/1 | Alexa Carlson | All hacks complete and 6/6 on quiz. Began an attempt to code a simulation (not finished) and fully described Conway&#39;s game of life. | . Amay Advani | 0.98/1 | Ava Carlson | All hacks complete with extra credit for dying pixels simulation. Guiding questions could be answered with more detail though. | . Kaiden Do | 1/1 | Sri Kotturi | All hacks were done and they were done well. You answered all of the guided questions which was good. Extra credit done and explained. | . Finn Carpenter | 0.94/1 | Lydia Cho | Hacks were done well, but guiding questions answered late. Extra credit simulation done very well. | . Grace Wang | 0.98/1 | Sri Kotturi | All hacks were complete and well done with explained extra credit for choosing an outfit. Guiding questions could be answered with more detail. Other than that, everything looked great. Good Job!!! | . Yasha Khoshini | 0.88/1 | Alexa Carlson | All hacks complete, however, didn&#39;t fully answer guiding questions on hack 3. 6/6 on quiz. | . Jake Warren | 0.97/1 | Lydia Cho | All hacks complete plus well done extra credit simulation, however you forgot to answer guiding questions for the extra credit. | . Liav Bar | 1/1 | Ava Carlson | All hacks are very detailed and complete. Guiding questions answered for all simulations, and extra credit spinner simulation. | . Taiyo Iwazaki | 0.9/1 | Alexa Carlson | All hacks complete, however, discriptions of simulations are a little brief. 6/6 on quiz. Slightly late but came and talked to us. Coded a very complex and working game of 2048. | . David Vasilev | 0.98/1 | Ava Carlson | All hacks complete, but did not answer full guiding questions for hack #1. Coded extra credit simulation described in hack #1. | . Luka Van Den Boomen | 0.75/1 | Alexa Carlson | All hacks complete. Descriptions of simulations very brief, also late. 6/6 on quiz. | . Claire Zhao | 0.9/1 | Sri Kotturi | everything was done and It looked great 6/6 on quiz | . Mati Danish | 0.83/1 | Ava Carlson | Hacks complete but guiding questions answered after due date. Guiding questions amswered simply. | . Shruthi Damodar | 0.88/1 | Alexa Carlson | All hacks complete, however didn&#39;t answer the guiding questions on hack #3. 6/6 on quiz. | . Claire Chen | 0.95/1 | Sri Kotturi | All hacks were good and you answered the guiding questions. the only thing is that the guiding questions were only briefly answered for hack #3 and there was no explanation on the extra credit. Other than that, it was great! | . Luna Iwazaki | 0.9/1 | Lydia Cho | All hacks complete and done well. No extra credit. | . Steven Zhu | 1/1 | Ava Carlson | All hacks complete with full answers to guiding questions. Extra credit for flipping coins simulation | . Nathan Capule | 0.97/1 | Ava Carlson | All hacks complete will full answers to guiding questions. Extra credit for traveling simulation but very simple | . Nikhil Chakravarthula | 0.8/1 | Alexa Carlson | Almost all hacks complete. Hack number 3 not complete (describe rolling dice simulation). 6/6 on quiz. Also late | . Ederick Wong | 0.95/1 | Ava Carlson | All hacks complete with very detailed answers to guiding questions. Extra 0.05 added for complex dice hack addition | . Paaras Purohit | 0.95/1 | Sri Kotturi | All hacks complete with extra credit for simulation coded for example simulation. Although, guiding questions for dice not super detailed (but detailed for example simulation). | . Antony Yu | 0.79/1 | Lydia Cho | Hacks submitted late with guiding questions missing for hack 1 and extra credit. Hacks show little effort. | . Annika Liao | 0.8/1 | Ava Carlson | Hacks submitted late, guiding questions not fully answered but full extra credit | . Noor B. | 0.9/1 | Alexa Carlson | Hacks submitted late, all hacks complete (very well), 6/6 on quiz, full extra credit | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/studentlesson/grades",
            "relUrl": "/studentlesson/grades",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Lesson Planning",
            "content": "Lesson Outline . Intro to simulations describe what a simulation is from Collegeboard | how it is different from an experiment (ex. virtual vs. real life) | . | Show parking lot example and explain how the binary works (include learnings from binary lesson) | Present Hacks fixing rolling dice code | create something with binary? | answer questions about simulations | fill in the blank? | . | Lesson To-Do: . Intro to a simulation &lt;- similar to collegeboard (explain what it is and purpose/how it is different from an experiment) | Research the development of simulations | Rolling dice simulation as example? &lt; could be homework (more simple) | Design a simulation of a parking lot for lesson (use binary and each parking spot is represented by a bit) | Convert ideas into one programming language (Javascript?) | create a hw assignment (have students develop their own simulation? Creative freedom or pre-determined simulation? Debug/correct errors in a pre-made simulation?) | make a notes “template” in VS code (markdown) where students can fill in the blank &lt;part of intro and in teaching development | . Simulation To-Do: . explain notes to Sri and Ava (try to remember/make sense of notes) | create an HTML table | convert ideas into one programming language (javascript?) | start code with fixed numbers (example: 7,9,2,12) | make a for loop and nested for loop where it turns on an image (of a car) where the bit =1 | make a button that will generate 4 random numbers (random grid of cars 4x4 bits &lt;each row is a number represented by 4 bits) | test, test, test | create an explanation of code + explain use of simulation (basically speaker notes for lesson) | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/lesson/planning",
            "relUrl": "/lesson/planning",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Simulations- Unit 3 Section 16 Lesson",
            "content": "3.16 Intro to Simulations - Alexa . What is a simulation? A simulation is an imitation of a situation or process | Aka a virtual experiment | . | . Guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Examples of Simulations: . Simulations are used all the time over many different industries . testing safety of a car | games | testing the efficiency of a parking lot | testing a new train route | . Simulation vs. Experiment . Experiment definition: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact | . So, why use a simulation? . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . leads into real life game example: . . . A Real Life Example: Four Corners - Lydia &amp; Ava . an example of a simulation and experiment = the game of 4 corners | games are simulations! | We are going to play a round of 4 corners here in class. This game is a real life version of our simulation. | Mr. Mortensen will be the person in the middle choosing corners. | Everyone will choose a corner, and if your corner is chosen, you are out! | . | . The rules of the game: . a person stands in the center of a room and the 4 coners are labeled 1-4 | Every player chooses a corner while the person in the middle closes their eyes | person in the middle chooses/calls out a number when instructed | every player in the chosen corner is now out | contine until there is a winner! | Let&#39;s play! . Below is the simulation of the four corners game! . import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . You chose corner number 2 and are still in! You chose corner number 3 and are still in! You chose corner number 4 and you&#39;re OUT . Comparing Experiment to Simulation Code: . Mr. Mortensen (person in the middle) = random.randint | if statement = if player is out | else = safe/continue | while loop = repeats process until there is a winner of the game | . DEBRIEF QUESTIONS: . Why is it better to code simulations than experiement in real life? | What makes this game a simulation? | What are its advantages and disadvantages? | Would an experiment be better in this situation? (raise hands for each team) | . . Hack #1 . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (collegeboard based questions) . Simulations Quiz (either screenshot or paste quiz in your notebook): | . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . . . Rolling a Dice Example - Sri . Below is a simulation of rolling dice! Examine the code and think about how this simulation works and its purpose! . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) . you rolled: [5, 1, 2] . . . Game of Life - Lydia &amp; Ava . Below is a simulation of the Game of Life, originally written by John Horton Conway. Mr. Mortensen has this game on the APCSP site and we think that it is a great example of an interactive simulation. . What it is . This game is an unpredictable cellular automaton | automaton = simulates and imitates human life, hence why this is called the game of life | After creating the initial configuration, the game evolves without pattern | . How it works . Cells in this game are alive or dead, similar to binary where they are on or off | The user created an initial configuration of cells on the grid, and presses play (tap the squares on the grid) | a cells&#39;s status (alive or dead, on or off) depends on the surrounding 8 cells status (surrounding 8 boxes). Here are the rules: The birth rule= a dead cell (blue box) that is surrounded by at least 3 alive cells (yellow boxes), will become alive | The death rule= an alive cell (yellow) with no or only one surviving cell around it dies (becomes blue) | Cell survival= an alive cell (yellow) with 2 or 3 alive neighboring cells will stay alive | . | . Try it Out! . Use the grid below to create cell figurations, press play, and watch your cells die, live, and move around! . . Remix of Game of Life . start step . . Hack #3 . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . . . Hacks Overview . Use these guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Hack #1 (0.3) . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (0.1) . Simulations Quiz (either screenshot or paste quiz in your notebook) | . Hack #3 (0.2) . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 (0.3) . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . Extra Credit (0.1) . For the extra 0.1: try coding a simple simulation and describe it (guiding question) | .",
            "url": "https://srihitakott1213.github.io/TeamBaddies/studentlesson/simulations",
            "relUrl": "/studentlesson/simulations",
            "date": " • Nov 30, 2022"
        }
        
    
  

  
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://srihitakott1213.github.io/TeamBaddies/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}